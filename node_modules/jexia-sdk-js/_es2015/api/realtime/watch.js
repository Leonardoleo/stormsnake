import { Observable } from "rxjs/internal/Observable";
import { MESSAGE } from "../../config";
import { allEvents, subscribeEventMessage, unsubscribeEventMessage, wsReadyDefer } from "./websocket";
export function watch(eventType = "all", ...others) {
    const events = Array.from(new Set((Array.isArray(eventType) ? eventType : [eventType]).concat(others)));
    if (!events.every((e) => allEvents.includes(e) || e === "all")) {
        throw new Error(MESSAGE.RTC.BAD_EVENT_SUBSCRIPTION_TYPE);
    }
    return Observable.create((observer) => {
        wsReadyDefer.promise.then(() => {
            subscribeEventMessage(this.webSocket, events, this.name, this.resourceType, observer)
                .catch((error) => observer.error(error));
        });
        return () => wsReadyDefer.promise
            .then(() => unsubscribeEventMessage(this.webSocket, events, this.name, this.resourceType, observer));
    });
}
