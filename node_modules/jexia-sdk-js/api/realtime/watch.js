"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Observable_1 = require("rxjs/internal/Observable");
var config_1 = require("../../config");
var websocket_1 = require("./websocket");
function watch(eventType) {
    var _this = this;
    if (eventType === void 0) { eventType = "all"; }
    var others = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        others[_i - 1] = arguments[_i];
    }
    var events = Array.from(new Set((Array.isArray(eventType) ? eventType : [eventType]).concat(others)));
    if (!events.every(function (e) { return websocket_1.allEvents.includes(e) || e === "all"; })) {
        throw new Error(config_1.MESSAGE.RTC.BAD_EVENT_SUBSCRIPTION_TYPE);
    }
    return Observable_1.Observable.create(function (observer) {
        websocket_1.wsReadyDefer.promise.then(function () {
            websocket_1.subscribeEventMessage(_this.webSocket, events, _this.name, _this.resourceType, observer)
                .catch(function (error) { return observer.error(error); });
        });
        return function () { return websocket_1.wsReadyDefer.promise
            .then(function () { return websocket_1.unsubscribeEventMessage(_this.webSocket, events, _this.name, _this.resourceType, observer); }); };
    });
}
exports.watch = watch;
