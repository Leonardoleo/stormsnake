import { RequestExecuter } from "../../../internal/executer";
import { QueryActionType } from "../../../internal/utils";
import { IFilteringCriterion, IFilteringCriterionCallback } from "../filteringApi";
import { IdentityCollection, ResourceInterface, ResourceType } from "../resource";
import { FilterableQuery } from "./filterableQuery";
export declare class ActionQuery<T, D extends ResourceInterface<T>> extends FilterableQuery<D> {
    readonly queryActionType: QueryActionType;
    constructor(queryExecuter: RequestExecuter, resourceType: ResourceType, resourceName: string, actionResourceName: string, queryActionType: QueryActionType, filter: IFilteringCriterion<D> | IFilteringCriterionCallback<D> | IdentityCollection<D>);
    private getFilter;
}
