import { Observer } from "rxjs";
import { ResourceType } from "../core/resource";
import { EventSubscriptionType, IWebSocket, RealTimeCommand, RealTimeCommandResponse, RealTimeEventMessage } from "./realTime.interfaces";
export declare const wsReadyDefer: import("../../internal/utils").DeferType<any>;
export declare const allEvents: ReadonlyArray<EventSubscriptionType>;
declare type IGetToken = () => Promise<string>;
export declare function start(webSocket: IWebSocket, getToken: IGetToken): void;
export declare function subscribeEventMessage(webSocket: IWebSocket, events: EventSubscriptionType[], setName: string, setType: ResourceType, observer: Observer<RealTimeEventMessage>): Promise<RealTimeCommandResponse | void>;
export declare function unsubscribeEventMessage(webSocket: IWebSocket, events: EventSubscriptionType[], setName: string, setType: ResourceType, observer?: Observer<RealTimeEventMessage>): Promise<RealTimeCommandResponse | void>;
export declare function realTimeCommand(webSocket: IWebSocket, data: RealTimeCommand): Promise<RealTimeCommandResponse>;
export {};
