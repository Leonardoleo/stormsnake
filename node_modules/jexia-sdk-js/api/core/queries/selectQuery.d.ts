import { RequestExecuter } from "../../../internal/executer";
import { FromRelated, ResourceType } from "../resource";
import { FilterableQuery } from "./filterableQuery";
import { RelatedQuery } from "./relatedQuery";
export declare class SelectQuery<T> extends FilterableQuery<T> {
    constructor(queryExecuter: RequestExecuter, resourceType: ResourceType, resourceName: string);
    limit(limit: number): this;
    offset(offset: number): this;
    sortAsc<K extends Extract<keyof T, string>>(fields: K[]): this;
    sortAsc<K extends Extract<keyof T, string>>(...fields: K[]): this;
    sortDesc<K extends Extract<keyof T, string>>(fields: K[]): this;
    sortDesc<K extends Extract<keyof T, string>>(...fields: K[]): this;
    related<R extends keyof T>(resourceName: R, callback?: (q: RelatedQuery<FromRelated<T[R]>>) => RelatedQuery<FromRelated<T[R]>>): this;
}
