var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var RelatedQuery = (function () {
    function RelatedQuery(resourceName, query) {
        this.resourceName = resourceName;
        this.query = query;
    }
    RelatedQuery.prototype.fields = function (field) {
        var _a;
        var fields = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            fields[_i - 1] = arguments[_i];
        }
        var relatedFields = this.nestedFields(Array.isArray(field) ? field : __spreadArrays([field], fields));
        (_a = this.query.fields).push.apply(_a, relatedFields);
        return this;
    };
    RelatedQuery.prototype.related = function (resourceName, callback) {
        var _this = this;
        if (callback === void 0) { callback = function (related) {
            _this.query.fields.push([_this.resourceName, resourceName].join("."));
            return related;
        }; }
        callback(new RelatedQuery([this.resourceName, resourceName].join("."), this.query));
        return this;
    };
    RelatedQuery.prototype.nestedFields = function (fields) {
        var _this = this;
        return fields.map(function (field) { return [_this.resourceName, field].join("."); });
    };
    return RelatedQuery;
}());
export { RelatedQuery };
