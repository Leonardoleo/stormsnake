"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var rxjs_1 = require("rxjs");
var executer_1 = require("../../internal/executer");
var query_1 = require("../../internal/query");
var requestAdapter_interfaces_1 = require("../../internal/requestAdapter.interfaces");
var resource_1 = require("../core/resource");
var realTime_interfaces_1 = require("./realTime.interfaces");
var websocket_1 = require("./websocket");
var Channel = (function (_super) {
    __extends(Channel, _super);
    function Channel(injector, websocketFactory, name) {
        var _this = _super.call(this, function (observer) {
            websocket_1.wsReadyDefer.promise
                .then(function () { return websocket_1.subscribeEventMessage(_this.websocketFactory(), ["published"], name, resource_1.ResourceType.Channel, observer); })
                .catch(function (error) { return observer.error(error); });
            return function () { return websocket_1.wsReadyDefer.promise
                .then(function () { return websocket_1.unsubscribeEventMessage(_this.websocketFactory(), ["published"], name, resource_1.ResourceType.Channel, observer)
                .catch(function () { return undefined; }); }); };
        }) || this;
        _this.injector = injector;
        _this.websocketFactory = websocketFactory;
        _this.name = name;
        return _this;
    }
    Channel.prototype.publish = function (data) {
        var _this = this;
        return rxjs_1.from(websocket_1.wsReadyDefer.promise.then(function () {
            return websocket_1.realTimeCommand(_this.websocketFactory(), {
                command: realTime_interfaces_1.RealTimeCommandTypes.Publish,
                correlation_id: Math.random().toString(),
                arguments: { channel: _this.name, data: data },
            });
        }));
    };
    Channel.prototype.getLog = function (filter) {
        var query = new query_1.Query();
        if (filter) {
            query.setFilterCriteria(filter);
        }
        var requestExecutor = this.injector.get(executer_1.RequestExecuter);
        return requestExecutor.executeRequest({
            resourceType: resource_1.ResourceType.Channel,
            resourceName: this.name,
            method: requestAdapter_interfaces_1.RequestMethod.GET,
            body: {},
            queryParams: query.compileToQueryParams()
        });
    };
    return Channel;
}(rxjs_1.Observable));
exports.Channel = Channel;
