"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WebStorageComponent = (function () {
    function WebStorageComponent(remember, window) {
        this.storageKey = "__jexia_tokens__";
        this.defaultKey = "__default_auth__";
        this.storage = remember ? window.localStorage : window.sessionStorage;
    }
    Object.defineProperty(WebStorageComponent.prototype, "tokens", {
        get: function () {
            var tokens;
            try {
                tokens = JSON.parse(this.storage.getItem(this.storageKey));
            }
            catch (_a) {
                tokens = {};
            }
            return tokens || {};
        },
        enumerable: true,
        configurable: true
    });
    WebStorageComponent.prototype.isEmpty = function () {
        return !this.tokens.length;
    };
    WebStorageComponent.prototype.setDefault = function (auth) {
        this.storage.setItem(this.defaultKey, auth);
    };
    WebStorageComponent.prototype.setTokens = function (auth, tokens, defaults) {
        if (defaults === void 0) { defaults = false; }
        var storedTokens = this.tokens;
        storedTokens[auth] = tokens;
        this.storage.setItem(this.storageKey, JSON.stringify(storedTokens));
        if (defaults || Object.keys(storedTokens).length === 1) {
            this.setDefault(auth);
        }
    };
    WebStorageComponent.prototype.getTokens = function (auth) {
        auth = auth || this.storage.getItem(this.defaultKey);
        return this.tokens[auth];
    };
    WebStorageComponent.prototype.clear = function () {
        this.storage.removeItem(this.storageKey);
    };
    return WebStorageComponent;
}());
exports.WebStorageComponent = WebStorageComponent;
var MemoryStorageComponent = (function () {
    function MemoryStorageComponent() {
        this.tokens = {};
    }
    MemoryStorageComponent.prototype.isEmpty = function () {
        return !Object.keys(this.tokens).length;
    };
    MemoryStorageComponent.prototype.setDefault = function (auth) {
        this.defaultTokens = auth;
    };
    MemoryStorageComponent.prototype.setTokens = function (auth, tokens, defaults) {
        if (defaults === void 0) { defaults = false; }
        this.tokens[auth] = tokens;
        if (defaults || Object.keys(this.tokens).length === 1) {
            this.setDefault(auth);
        }
    };
    MemoryStorageComponent.prototype.getTokens = function (auth) {
        auth = auth || this.defaultTokens;
        return this.tokens[auth];
    };
    MemoryStorageComponent.prototype.clear = function () {
        this.tokens = {};
    };
    return MemoryStorageComponent;
}());
exports.MemoryStorageComponent = MemoryStorageComponent;
var TokenStorage = (function () {
    function TokenStorage() {
        if (TokenStorage.storage) {
            throw new Error("Use TokenStorage.getStorageAPI() instead of new");
        }
        else {
            TokenStorage.storage = new MemoryStorageComponent();
        }
    }
    TokenStorage.getStorageAPI = function () {
        return TokenStorage.storage;
    };
    TokenStorage.setStorageAPI = function (storage) {
        TokenStorage.storage = storage;
    };
    TokenStorage.storage = new MemoryStorageComponent();
    return TokenStorage;
}());
exports.TokenStorage = TokenStorage;
