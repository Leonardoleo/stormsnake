var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { map, switchMap } from "rxjs/operators";
import { API } from "../../config";
import { RequestExecuter } from "../../internal/executer";
import { RequestAdapter, RequestMethod } from "../../internal/requestAdapter";
import { DeleteQuery } from "../core/queries/deleteQuery";
import { SelectQuery } from "../core/queries/selectQuery";
import { UpdateQuery } from "../core/queries/updateQuery";
import { ResourceType } from "../core/resource";
import { AuthOptions, TokenManager } from "../core/tokenManager";
var UMSModule = (function () {
    function UMSModule() {
        this.name = "users";
        this.resourceType = ResourceType.Users;
        if (!(this instanceof UMSModule)) {
            throw new Error("UMS module initialized incorrectly, you need to include 'new'");
        }
    }
    UMSModule.prototype.init = function (coreInjector) {
        var injector = coreInjector.resolveAndCreateChild([RequestExecuter]);
        this.tokenManager = injector.get(TokenManager);
        this.requestAdapter = injector.get(RequestAdapter);
        this.projectId = injector.get(AuthOptions).projectID;
        this.requestExecuter = injector.get(RequestExecuter);
        return Promise.resolve(this);
    };
    Object.defineProperty(UMSModule.prototype, "basePath", {
        get: function () {
            return API.PROTOCOL + "://" + this.projectId + "." + API.HOST + "." + API.DOMAIN + ":" + API.PORT;
        },
        enumerable: true,
        configurable: true
    });
    UMSModule.prototype.getConfig = function () {
        return { ums: {} };
    };
    UMSModule.prototype.terminate = function () {
        return Promise.resolve(this);
    };
    UMSModule.prototype.signIn = function (user) {
        var _this = this;
        var body = {
            method: "ums",
            email: user.email,
            password: user.password
        };
        return this.requestAdapter.execute(this.getUrl(API.AUTH, false), { body: body, method: RequestMethod.POST }).pipe(map(function (tokens) {
            _this.tokenManager.addTokens([user.email, user.alias], tokens, user.default);
            return tokens.access_token;
        }));
    };
    UMSModule.prototype.signUp = function (credentials, extra) {
        if (extra === void 0) { extra = {}; }
        var body = __assign({ email: credentials.email, password: credentials.password }, extra);
        return this.requestAdapter.execute(this.getUrl(API.UMS.SIGNUP), { body: body, method: RequestMethod.POST });
    };
    UMSModule.prototype.setDefault = function (alias) {
        this.tokenManager.setDefault(alias);
    };
    UMSModule.prototype.resetDefault = function () {
        this.tokenManager.resetDefault();
    };
    UMSModule.prototype.getUser = function (alias) {
        var _this = this;
        return this.tokenManager.token(alias).pipe(switchMap(function (token) { return _this.requestAdapter.execute(_this.getUrl(API.UMS.USER), { headers: { Authorization: "Bearer " + token } }); }));
    };
    UMSModule.prototype.changePassword = function (alias, oldPassword, newPassword) {
        var _this = this;
        var body = {
            old_password: oldPassword,
            new_password: newPassword,
        };
        return this.tokenManager.token(alias).pipe(switchMap(function (token) { return _this.requestAdapter.execute(_this.getUrl(API.UMS.CHANGEPASSWORD), { body: body, headers: { Authorization: "Bearer " + token }, method: RequestMethod.POST }); }));
    };
    UMSModule.prototype.deleteUser = function (alias, password) {
        var _this = this;
        var body = { password: password };
        return this.tokenManager.token(alias).pipe(switchMap(function (token) { return _this.requestAdapter.execute(_this.getUrl(API.UMS.USER), { body: body, headers: { Authorization: "Bearer " + token }, method: RequestMethod.DELETE }); }));
    };
    UMSModule.prototype.select = function () {
        return new SelectQuery(this.requestExecuter, this.resourceType, this.name);
    };
    UMSModule.prototype.update = function (record) {
        return new UpdateQuery(this.requestExecuter, record, this.resourceType, this.name);
    };
    UMSModule.prototype.delete = function () {
        return new DeleteQuery(this.requestExecuter, this.resourceType, this.name);
    };
    UMSModule.prototype.requestResetPassword = function (email) {
        return this.requestAdapter.execute(this.getUrl(API.UMS.RESETPASSWORD), { body: { email: email }, method: RequestMethod.POST });
    };
    UMSModule.prototype.resetPassword = function (resetToken, newPassword) {
        var body = { new_password: newPassword };
        return this.requestAdapter.execute(this.getUrl(API.UMS.RESETPASSWORD) + ("/" + resetToken), { body: body, method: RequestMethod.POST });
    };
    UMSModule.prototype.getUrl = function (api, ums) {
        if (ums === void 0) { ums = true; }
        var url = this.basePath;
        if (ums) {
            url += "/" + API.UMS.ENDPOINT;
        }
        return url + "/" + api;
    };
    return UMSModule;
}());
export { UMSModule };
