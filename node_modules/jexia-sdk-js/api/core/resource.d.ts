export declare enum ResourceType {
    Dataset = "ds",
    Fileset = "fs",
    Channel = "channel",
    Users = "users"
}
export interface IResource {
    name: string;
    resourceType: ResourceType;
}
export declare type DefaultResourceFields = "id" | "created_at" | "updated_at";
export declare type DefaultResourceInterface = {
    [P in DefaultResourceFields]: string;
};
export declare type ResourceInterface<T> = T & DefaultResourceInterface;
export declare type IdentityCollection<T> = string[] | Array<ResourceInterface<T>>;
export declare type FromRelated<T> = T extends any[] ? keyof ResourceInterface<T[number]> : keyof ResourceInterface<T>;
