export * from "./index";
import { Client } from "./api/core/client";
import { TokenStorage, WebStorageComponent } from "./api/core/componentStorage";
import { DataOperationsModule } from "./api/dataops/dataOperationsModule";
import { FileOperationsModule } from "./api/fileops/fileOperationsModule";
import { LoggerModule } from "./api/logger/public-api";
import { RealTimeModule } from "./api/realtime/realTimeModule";
function storageAvailable(type) {
    var storage = type === "localStorage" ? window.localStorage : window.sessionStorage;
    var testString = "test";
    try {
        storage.setItem(testString, testString);
        storage.getItem(testString);
        storage.removeItem(testString);
        return true;
    }
    catch (e) {
        return e instanceof DOMException && (e.code === 22 ||
            e.code === 1014 ||
            e.name === "QuotaExceededError" ||
            e.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
            storage.length !== 0;
    }
}
if (storageAvailable("localStorage") && storageAvailable("sessionStorage")) {
    TokenStorage.setStorageAPI(new WebStorageComponent(true, window));
}
export function jexiaClient() {
    return new Client(window.fetch.bind(window));
}
export function dataOperations() {
    return new DataOperationsModule();
}
export function fileOperations(config) {
    if (config === void 0) { config = {}; }
    return new FileOperationsModule(new FormData(), config);
}
export function realTime(webSocketBuilder) {
    if (webSocketBuilder === void 0) { webSocketBuilder = function (appUrl) { return new WebSocket(appUrl); }; }
    return new RealTimeModule(webSocketBuilder);
}
export function logger(level, modules) {
    return new LoggerModule(level, modules);
}
export * from "./api/logger/public-api";
