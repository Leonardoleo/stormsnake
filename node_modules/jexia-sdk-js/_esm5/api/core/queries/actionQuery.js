var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { RequestMethod } from "../../../internal/requestAdapter.interfaces";
import { field } from "../filteringApi";
import { FilterableQuery } from "./filterableQuery";
var ActionQuery = (function (_super) {
    __extends(ActionQuery, _super);
    function ActionQuery(queryExecuter, resourceType, resourceName, actionResourceName, queryActionType, filter) {
        var _this = _super.call(this, queryExecuter, RequestMethod.PUT, resourceType, resourceName) || this;
        _this.queryActionType = queryActionType;
        _this.query.setAction(queryActionType, actionResourceName, _this.getFilter(filter));
        return _this;
    }
    ActionQuery.prototype.getFilter = function (filter) {
        if (!Array.isArray(filter)) {
            return filter;
        }
        var idCollection = filter;
        var hasInvalidIds = function () { return idCollection.some(function (o) { return !o || typeof o === "object" && !o.id; }); };
        var hasMixedData = function () { return new Set(idCollection.map(function (o) { return typeof o; })).size > 1; };
        if (hasInvalidIds() || hasMixedData()) {
            throw Error("Invalid resource or id list: " + idCollection);
        }
        var hasOnlyIds = idCollection.every(function (o) { return typeof o === "string"; });
        var ids = hasOnlyIds ? idCollection : idCollection.map(function (c) { return c.id; });
        return field("id").isInArray(ids);
    };
    return ActionQuery;
}(FilterableQuery));
export { ActionQuery };
