import { Observable } from "rxjs";
import { Query } from "../../../internal/query";
export class BaseQuery extends Observable {
    constructor(queryExecuter, method, resourceType, resourceName) {
        super((subscriber) => this.queryExecuter.executeRequest(this.compiledRequest).subscribe(subscriber));
        this.queryExecuter = queryExecuter;
        this.method = method;
        this.resourceType = resourceType;
        this.resourceName = resourceName;
        this.query = new Query();
    }
    fields(field, ...fields) {
        this.query.fields = Array.isArray(field) ? field : [field, ...fields];
        return this;
    }
    get compiledRequest() {
        return {
            resourceType: this.resourceType,
            resourceName: this.resourceName,
            method: this.method,
            body: this.body || {},
            queryParams: this.query.compileToQueryParams() || [],
        };
    }
}
